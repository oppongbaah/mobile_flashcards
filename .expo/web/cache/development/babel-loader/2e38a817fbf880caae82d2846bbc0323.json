{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/isaac/Documents/React Native/Project/vm/mobile-flashcards/App.js\";\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport * as colors from \"./src/utils/colors\";\nimport Dashboard from \"./src/Components/Dashboard\";\nimport NewDeck from \"./src/Components/NewDeck\";\nimport DeckDetails from \"./src/Components/DeckDetials\";\nimport { Provider } from 'react-redux';\nimport store from \"./src/store\";\n\nvar App = function App() {\n  var Tab = createBottomTabNavigator();\n  var HomeStack = createStackNavigator();\n\n  var HomeScreen = function HomeScreen() {\n    return React.createElement(HomeStack.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#4D4D4D'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, React.createElement(HomeStack.Screen, {\n      name: \"Dashboard\",\n      component: Dashboard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), React.createElement(HomeStack.Screen, {\n      name: \"Deck Details\",\n      component: DeckDetails,\n      options: function options(_ref) {\n        var route = _ref.route;\n        return {\n          title: route.params.title\n        };\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(focused, size, color) {\n          var iconName;\n\n          if (route.name === \"Dashboard\") {\n            iconName = \"home\";\n          } else if (route.name === \"New Deck\") {\n            iconName = \"add-circle-outline\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: 25,\n            color: colors.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 24\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"black\",\n      inactiveTintColor: 'gray',\n      labelStyle: {\n        fontSize: 16,\n        margin: 0,\n        padding: 0\n      },\n      style: {\n        backgroundColor: \"silver\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Dashboard\",\n    component: HomeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"New Deck\",\n    component: NewDeck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/isaac/Documents/React Native/Project/vm/mobile-flashcards/App.js"],"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","Ionicons","colors","Dashboard","NewDeck","DeckDetails","Provider","store","App","Tab","HomeStack","HomeScreen","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","route","title","params","tabBarIcon","focused","size","color","iconName","name","primary","activeTintColor","inactiveTintColor","labelStyle","fontSize","margin","padding","style"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport * as colors from './src/utils/colors';\nimport Dashboard from './src/Components/Dashboard';\nimport NewDeck from './src/Components/NewDeck';\nimport DeckDetails from './src/Components/DeckDetials';\nimport {Provider} from 'react-redux';\nimport store from './src/store';\n\nconst App = () => {\n\n  // create a tab navigation\n  const Tab = createBottomTabNavigator();\n\n  const HomeStack = createStackNavigator();\n\n  const HomeScreen = () => {\n    return (\n      <HomeStack.Navigator \n        initialRouteName=\"Home\"\n        screenOptions={{\n          headerTitleAlign: 'center',\n          headerStyle: {\n            backgroundColor: '#4D4D4D',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle :{\n            fontWeight: 'bold',\n          },\n        }}\n      >\n        <HomeStack.Screen name=\"Dashboard\" component={Dashboard} />\n        <HomeStack.Screen \n          name=\"Deck Details\" \n          component={DeckDetails} \n          options={({route}) => ({title: route.params.title})} \n        />\n        \n      </HomeStack.Navigator>\n    )\n  }\n\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Tab.Navigator \n            screenOptions={({ route }) => ({\n              tabBarIcon: (focused, size, color) => {\n                let iconName;\n\n                if(route.name === \"Dashboard\") {\n                  iconName = \"home\"\n                }\n                else if (route.name === \"New Deck\") {\n                  iconName = \"add-circle-outline\"\n                }\n\n                // You can return any component that you like here!\n                return <Ionicons name={iconName} size={25} color={colors.primary} />;\n              },\n            })}\n            tabBarOptions={{\n              activeTintColor: \"black\",\n              inactiveTintColor: 'gray',\n              labelStyle: {\n                fontSize: 16,\n                margin: 0,\n                padding: 0\n              },\n              style: {\n                backgroundColor: \"silver\"\n              }\n            }}\n        >\n          <Tab.Screen name=\"Dashboard\" component={HomeScreen} />\n          <Tab.Screen name=\"New Deck\" component={NewDeck}/>\n        </Tab.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}